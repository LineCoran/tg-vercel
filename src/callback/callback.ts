import { dbService } from '../service';
import { createCategoryOptions, getStartMsg } from '../shared';
import { KEYBOARDS, MAIN_ADMIN, MAIN_ADMINS } from '../constants/constants';
import { createReadStream } from 'fs';
import { createAdminsListToDelete, sendOrEditMessage } from '../helpers';
import dayjs = require('dayjs');

const DELETE_ADMIN_UNIQ_PREFIX = '/delete_admin--'

const callback = () => async (ctx: any) => {
    const chatId = ctx.update.callback_query.message?.chat.id;
    const callback_query = ctx.update.callback_query.data;

    if (callback_query === '/calculation') {
        ctx.scene.enter('calculation_scene')
        return
    }
    try {
        const session = await dbService.getUserSession(chatId);
        if (callback_query.includes(DELETE_ADMIN_UNIQ_PREFIX)) {
            const adminUserNameToDelete = callback_query.replaceAll(DELETE_ADMIN_UNIQ_PREFIX, '')
            if (MAIN_ADMINS.includes(adminUserNameToDelete)) {
                return sendOrEditMessage(ctx, chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${adminUserNameToDelete} –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!`, createCategoryOptions([], { isMain: true }));
            }
    
            try {
                const deletedAdminChatId = await dbService.deleteAdmin(adminUserNameToDelete);
                if (deletedAdminChatId) ctx.telegram.sendMessage(deletedAdminChatId, '–í—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!')
                return sendOrEditMessage(ctx, chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${adminUserNameToDelete} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!`, createCategoryOptions([], { isMain: true }))    
            } catch(error: any) {
                console.log(error)
                return sendOrEditMessage(ctx, chatId, `–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${adminUserNameToDelete}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ! ${error.message}`, createCategoryOptions([], { isMain: true }))    
            }
    
        }
    
        switch (callback_query) {
            case '/back':
                const { text, options } = getStartMsg(session.is_owner)
                session.is_create_order_process = false;
                session.is_set_admin_process = false;
                await dbService.saveUserSession(chatId, session);
                return sendOrEditMessage(ctx, chatId, text, options );
            case '/contacts':
                return  sendOrEditMessage(ctx, chatId, '\n' +
                  '–ü—Ä–∏–≤–µ—Ç üëã \n' +
                  '\n' +
                  '–ú–µ–Ω—è –∑–æ–≤—É—Ç –î–∞—à–∞! –Ø –∑–∞–Ω–∏–º–∞—é—Å—å –≤—ã–∫—É–ø–æ–º –∏ –¥–æ—Å—Ç–∞–≤–∫–æ–π —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ö–∏—Ç–∞—è –ø–æ–¥ –∫–ª—é—á üîë \n' +
                  '\n' +
                  '–ó–∞–Ω–∏–º–∞—é—Å—å —è —ç—Ç–∏–º –±–æ–ª–µ–µ 3 –ª–µ—Ç. –ü–æ—ç—Ç–æ–º—É —Å –≤–∞—à–∏–º –≥—Ä—É–∑–æ–º —Ç–æ—á–Ω–æ –≤—Å—ë –±—É–¥–µ—Ç –≤ –ø–æ—Ä—è–¥–∫–µ!\n' +
                  '\n' +
                  '–Ø –ø—Ä–∏–≤–µ–∑–ª–∞ –±–æ–ª–µ–µ 10 —Ç–æ–Ω–Ω, —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π, —Ç–æ–≤–∞—Ä–∞.\n' +
                  '\n' +
                  '–° –æ—Ç–∑—ã–≤–∞–º–∏ –º–æ–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –Ω–∞ –º–æ–µ–π —Å—Ç—Ä–∞–Ω–∏—á–∫–µ –≤ ¬´Instagram¬ª. –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–µ–µ –µ—Å—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–ö–æ–Ω—Ç–∞–∫—Ç—ã¬ª\n' +
                  '\n' +
                  '–ï—Å–ª–∏ –≤—ã –µ—â–µ –Ω–µ —Å–∫–∞—á–∞–ª–∏ –≤—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è - —É –º–µ–Ω—è –µ—Å—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ì–∞–π–¥. –ê –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—É—á–∏—Ç—å—Å—è –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å —Å–∞–º–∏ - –æ–±—É—á–µ–Ω–∏–µ.\n' +
                  '\n' +
                  '–ñ–¥—É –≤–∞—à –∑–∞–∫–∞–∑ üòâ', createCategoryOptions(KEYBOARDS.LINKS.CONTACTS, { isBack: true })
                )
            case '/conditions':
                return sendOrEditMessage(ctx, chatId, '–£—Å–ª–æ–≤–∏—è:', createCategoryOptions(KEYBOARDS.LINKS.CONDITIONS, { isBack: true }))
            case '/agreements':
                return sendOrEditMessage(ctx, chatId, '–î–æ–≥–æ–≤–æ—Ä–∞:', createCategoryOptions(KEYBOARDS.LINKS.AGREEMENTS, { isBack: true }))
            case '/education':
                return sendOrEditMessage(ctx, chatId, `–ë–∞–∑–∞ WeChat - 50 BYN\n–î–æ—Å—Ç–∞–≤–∫–∞ - 150 BYN\n–í—ã–∫—É–ø - 200 BYN\n–í—ã–∫—É–ø –∏ –¥–æ—Å—Ç–∞–≤–∫–∞ - 300 BYN\n–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º—É –≤–≤–æ–∑—É - 500 BYN`, createCategoryOptions([], { isBack: true }))
            case '/order':            
                const photoPath = './assets/order_form.jpg';
                if (!session.is_send_photo) {
                    session.is_send_photo = true;
                    dbService.saveUserSession(chatId, session);
                    await ctx.sendPhoto(chatId, createReadStream(photoPath), { caption: '–ü—Ä–∏–º–µ—Ä –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è' });
                    return ctx.sendMessage('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ:', createCategoryOptions(KEYBOARDS.ORDER, { isBack: true }))
                } else {
                    return sendOrEditMessage(ctx, chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ:', createCategoryOptions(KEYBOARDS.ORDER, { isBack: true }))
                }
                
            case '/credentials':
                return sendOrEditMessage(ctx, chatId, `–ü–æ–ª—É—á–∞—Ç–µ–ª—å: –ò–ü –ß—É—è–Ω–æ–≤–∞ –î–∞—Ä—å—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞\n–£–ù–ü : 491643105\n–ù–æ–º–µ—Ä —Å—á—ë—Ç–∞ : BY74POIS30130163001701933001\n–ë–∞–Ω–∫ : –û–ê–û ¬´–ü–∞—Ä–∏—Ç–µ—Ç–±–∞–Ω–∫¬ª\n–ë–ò–ö : POISBY2X\n–ö–û–î –ü–õ–ê–¢–ï–ñ–ê (–≤–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏) : 90401\n–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ : –û–∫–∞–∑–∞–Ω–∏–µ —É—Å–ª—É–≥`, createCategoryOptions([], { isBack: true }))    
            case '/create_order':
                session.is_create_order_process = true;
                dbService.saveUserSession(chatId, session);
                return sendOrEditMessage(ctx, chatId, '–ü—Ä–∏—à–ª–∏—Ç–µ —Å–∫—Ä–∏–Ω —Å —Ç–µ–∫—Å—Ç–æ–º:', createCategoryOptions([], { isCancel: true }))
            case '/admin':
                return sendOrEditMessage(ctx, chatId, '–†–∞–∑–ª–∏—á–Ω—ã–µ –∫–Ω–æ–ø–æ—á–∫–∏:', createCategoryOptions(KEYBOARDS.ADMIN_BUTTONS, { isBack: true }))
    
            case '/admin_admins_list':
                let msg = ''
                const admins = await dbService.getAdmins();
                const filteredAdmins = admins.filter(admin => admin.username !== MAIN_ADMIN);
                filteredAdmins.forEach((admin, index) => msg += `${index + 1}. @${admin.username} - ID —á–∞—Ç–∞: ${admin.chat_id}\n`)
                return sendOrEditMessage(ctx, chatId, `–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n ${msg}`, createCategoryOptions([], { isBack: true } ))
            case '/admin_sessions':
    
            try {
                const allSession = await dbService.getSessions();
                let msgForSession = `–í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π: ${allSession.length}\n`
                allSession.forEach((sessionItem, index) => msgForSession += `${index + 1}.\n–ò–º—è: ${sessionItem.first_name} ${sessionItem.second_name}\n–ù–∏–∫: ${sessionItem.username}\n –ß–∞—Ç ID: ${sessionItem.chat_id}\n –î–∞—Ç–∞: ${sessionItem.timestamp}\n\n\n`)
                return sendOrEditMessage(ctx, chatId, `–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π:\n${msgForSession}`, createCategoryOptions([], { isBack: true } ))
    
            } catch (error: any) {
                return sendOrEditMessage(ctx, chatId, `–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Å—Å–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. Error: ${error.message}`, createCategoryOptions([], { isBack: true } ))
            }
    
            case '/admin_set_admin':
                session.is_set_admin_process = true;
                dbService.saveUserSession(chatId, session);
                return sendOrEditMessage(ctx, chatId, '–ü—Ä–∏—à–ª–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ @alexeiiiii:', createCategoryOptions([], { isCancel: true }))
            case '/admin_delete_admin':
                const adminsToDelete = await dbService.getAdmins();
                const filteredAdminsToDelete = adminsToDelete.filter(admin => admin.username !== MAIN_ADMIN);
                const buttonWithAdminsToDelete = createAdminsListToDelete(filteredAdminsToDelete);
                if (buttonWithAdminsToDelete.length === 0) return sendOrEditMessage(ctx, chatId, '–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø—É—Å—Ç. –£–¥–∞–ª—è—Ç—å –Ω–µ–∫–æ–≥–æ.', createCategoryOptions([], { isMain: true }))    
                return sendOrEditMessage(ctx, chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤', createCategoryOptions(buttonWithAdminsToDelete, { isCancel: true }))    
            case '/admin_order_list':
                try {
                    const allOrders = await dbService.getAllOrders();
                    const filteredAllOrders = allOrders.filter((item: any) => item.created_at);
                    const users: string[] = [];
                    const totalOrdersCounts = filteredAllOrders.length;
                    const minDate = filteredAllOrders.at(-1).created_at;
                    const maxDate = filteredAllOrders[0].created_at;
                    filteredAllOrders.forEach(order => users.push(order.username))
                    let msgForAllOrders = `–í—Å–µ–≥–æ —Å–¥–µ–ª–∞–Ω–æ –∑–∞–∫–∞–∑–æ–≤: ${totalOrdersCounts} —à—Ç.\n`;
                    msgForAllOrders += `–ü–µ—Ä–∏–æ–¥ —Å ${dayjs(minDate).format('YYYY.MM.DD HH:mm')} –ø–æ ${dayjs(maxDate).format('YYYY.MM.DD HH:mm')}\n`;
                    msgForAllOrders += `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–¥–µ–ª–∞–≤—à–∏–µ –∑–∞–∫–∞–∑: ${Array.from(new Set(users)).length}`;

                    return sendOrEditMessage(ctx, chatId, `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –≤—Å–µ–º –∑–∞–∫–∞–∑–∞–º:\n\n${msgForAllOrders}`, createCategoryOptions([], { isBack: true } ))
        
                } catch (error: any) {
                    return sendOrEditMessage(ctx, chatId, `–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. Error: ${error.message}`, createCategoryOptions([], { isBack: true } ))
                }
            default:
                return;
        }
    
    } catch(e) {
        console.log(e)
    }
};

export { callback };
